apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
                - alertmanager:9093

    rule_files:
      - /etc/prometheus/rules/*.yaml

    scrape_configs:
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      - job_name: 'kubernetes-nodes'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics

      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

      - job_name: 'aura-services'
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - aura
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: kubernetes_service_name

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-alerts
  namespace: monitoring
data:
  aura-alerts.yaml: |
    groups:
    - name: aura-service-alerts
      rules:
      - alert: ServiceDown
        expr: up{job="aura-services"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Service {{ $labels.kubernetes_service_name }} is down"
          description: "The service {{ $labels.kubernetes_service_name }} in namespace {{ $labels.kubernetes_namespace }} has been down for more than 1 minute."
          
      - alert: HighErrorRate
        expr: sum(rate(http_requests_total{job="aura-services", status=~"5.."}[5m])) by (kubernetes_service_name) / sum(rate(http_requests_total{job="aura-services"}[5m])) by (kubernetes_service_name) > 0.05
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "High error rate for {{ $labels.kubernetes_service_name }}"
          description: "Service {{ $labels.kubernetes_service_name }} has a high HTTP error rate (> 5%)."
          
      - alert: HighCPUUsage
        expr: sum(rate(container_cpu_usage_seconds_total{namespace="aura"}[5m])) by (pod) / sum(container_spec_cpu_quota{namespace="aura"} / container_spec_cpu_period{namespace="aura"}) by (pod) > 0.8
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage for {{ $labels.pod }}"
          description: "Pod {{ $labels.pod }} is using more than 80% of its CPU request for more than 5 minutes."
          
      - alert: HighMemoryUsage
        expr: sum(container_memory_usage_bytes{namespace="aura"}) by (pod) / sum(container_spec_memory_limit_bytes{namespace="aura"}) by (pod) > 0.8
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High Memory usage for {{ $labels.pod }}"
          description: "Pod {{ $labels.pod }} is using more than 80% of its memory limit for more than 5 minutes."
          
      - alert: SlowAPIResponses
        expr: http_request_duration_seconds{job="aura-services", quantile="0.9"} > 1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Slow API responses from {{ $labels.kubernetes_service_name }}"
          description: "90% of API responses from {{ $labels.kubernetes_service_name }} are taking more than 1 second." 